
DAY 1
Taluk office - income, caste, etc ( Erode People management) - Class (Set of work)

income room 
caste room - methods (specific work, 

Taluk office (Sathyamanagalam) - Erode follow - Sub class

10th student certificate camp(Erode Taluk) - 
	Mark sheet, TC, income, caste - Object creation (Class)
	
	ErodeTaluk 10thCertificateCamp = new ErodeTaluk();
	GovtHospital eyeCamp = new GovtHospital();
	
Clerk - Constructor

Taluk office - System, chair, telephone, cell phone, newspaper, water, reception, tables, people, rooms( table, chair, water, people, telephone, cellphone)

Erode taluk office reception, reception chair, reception person, reception phone, officer - static items
water, newspaper - public item

Rules - interface (rules)

TamilNadu People Admin ( Project)
Package - 
	Peoeple Management (Erode Taluk, Chennai Taluk, etc...)
	People Health Management (Erode Govt hos, 
	Law managerment ( Erode high court, 
	Police 
	
	
1) General explanation about Java 
2) Class, variables, methods, package and project

*********************************************************************************************************************

DAY 2

Class - important thing, through which we perform some task. Class may contains methods and variables

Method1 - A work
Method2 - B work
Method1 + method3 - C work ( A work + continuation)

Variables - shape and count
shape - datatype 


int a = 10; 
String a = "10";
double a = 10d;

int a; - declare
a =10; - define

Variables - Its a memory location that can hold values of a specific datatype.

Types of variables 
1. Local variable - 
	* defines within a block ({   })/method/constructor
	* scope of local variable is only within the block in which the variable is declared
	* intialization of local variable is madatory
	* local variables can not be static
	
	int a = 10;
	String sathya = "10";
	
2. Instance variable/class variable
	* Declared within a class but outside of a method
	* Non- static variables
	* To access instance variables, we need to create object
	
	int a = 10;
	String sathya = "10";
	
	
3. Static variable
	* Declared within a class but outside fo a method
	* static keyword is used with variables
	* To access this variable, dont need to create an object
	
	static int a = 10;
	static String sathya = "10";
	
	
Datatype: Its a clasification of a data, which tells the compiler or interpretor about how the programmer intends to use the data.

1) Primitive
	a) boolean - yes or no
	b) Textual 
		char - a, b, c, A, B
		byte - 
	c) numeric 
		int 
		short
		double
		long
		float

2) Non Primitive
	d) String 
	e) array


Access Modifier
	* It defines where and who can use a method/variable/class
	1) default
	2) private
	3) protected
	4) public 
	
	int a = 10; - default (no need to mention "default" word
	private int a = 10;
	protected int a = 10;
	public int a = 10;
	

                                     | default |  private  | protected  | public 
									 |         |           |            | 
same class                           | yes     | yes       | yes        | yes
									 |         |           |            |
same package but sub class           | yes     | no        | yes        | yes
									 |         |           |            |
same package but non sub class       | yes     | no        | yes        | yes
									 |         |           |            |
different package but sub class      | no      | no        | yes        | yes
									 |         |           |            |
different package but non sub class  | no      | no        | no         | yes


JVM, JRE, JDK

our codes - english - .java
compile - .class - byte code (machine recognizable language)


JVM - Java Virtual Machine 
* This can not be seen
* It first checks for main method
* It creates the code flow, in java the flow is called "Thread" 
* JVM provides run time environment in which Java byte codes can be executed
* loads code| verifies code| execute code| provides run time environment

JRE - Java Runtime Environment
* Physically exist
* Contains JVM and set of libraries
* JVM uses these libraries to execute the codes

JDK - Java Developement kit
* It contains JVM, set of libraries and dev tools (JRE + dev tools)
* Used to develop and execute the codes
* Dev tools + debugger + compiler + java doc

**********************************************************************************************	
DAY 3

Project - What are we trying to achieve 


Package - Consist of Classes, Interfaces and files

Eclipe/IntelJ/STS(SpringToolSuite):
* Its a Editor
* It help us to easily create a project, edit file, gives us proper look
* Perspective 
	Few of the perspectives in Eclipse
	* Java
	* Debug
	* Git
	
Dependency Management
* Maven - pom.xml
* Gradle - gradle.build

How to create a project
* Java project
* Maven project

***********************************************************************************************

DAY 4

Object creation

1) In order to access non static members of a class, we create object and access the methods and variables


Memory Management

Heap memory
Stack memory
SCP (String Constant Pool)

ClassA obj1 = new ClassA();

ClassA - Class Name
Obj1 - Object Name 
new = key word to create obj
ClassA() - Constructor or Object creation or instance creation

* Whenever we create object for a class, whatever non-static variables and methods present in that class will be copied to heap memory
* Object varibale or instance variable, is stored in stack memory 


	stack memory			HEap me
	obj1				a = 10; method1();
	obj2				a = 10; method1();
	obj3				a = 10; method1(); 
	obj1ClassB			non static members 
	
int a = 10;
* a = 10 - it will be stored in stack memory

String Sathya = "1000"; String Literals
String Sathya = new String("1000"); Object creation

Sathya - Stack
1000 - SCP of Heap memory

String str = "Sathya";
String str1 = "Sathya";
String str2 = "Ranjith";

stack 		SCP
str			"Sathya" - 
str1 		
str2 		Ranjith


str1 = str1 + str2;
str1 = SathyaRanjith

str - Sathya - SathyaRanjith


stack 		SCP
str			"Sathya" - 
str1 		SathyaRanjith
str2 		Ranjith

str1 = str1+"abc"

stack 		SCP
str			"Sathya" - 
str1 		SathyaRanjithabc
str2 		Ranjith
			SathyaRanjith

Immutable concept 
* It happens with String literals



String Sathya = "1000"; String Literals
String Sathya1 = new String("1000"); Object creation

Methods in Java
1) method without return type
2) method with return type
3) static method
4) non static method
5) parameterized method
6) Non parameterized method


***************************************************************************************
DAY 5

int a = 10; 

* access modifer is default
* It would be local or instance variable
* datatype is int
* This is stored in stack memory
* Non-static
* We need to create object to access this method

What is static
How we can access static variable inside or outside a class














	

	
	
	
